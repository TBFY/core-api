{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "UseCase1.ipynb",
      "provenance": [],
      "collapsed_sections": [],
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/TBFY/knowledge-graph-API/blob/master/UseCase1.ipynb\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "kDtY46wE_1D-",
        "colab_type": "text"
      },
      "source": [
        "![TBFY-Banner](https://raw.githubusercontent.com/TBFY/general/master/figures/tbfy-banner.png)"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "IEk2U9ZB_5ym",
        "colab_type": "text"
      },
      "source": [
        "# **USE CASE 1 - Organisations participating in similar contracting processes**"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "cY_QHGGTME7i",
        "colab_type": "text"
      },
      "source": [
        "This use case will show the possible relationship among organisations by comparising the contracting processes which they have played a role in.\n",
        "First thing we are going to do is to get a list of organisations in the **core API**:\n",
        "\n",
        "* **GET /organisation** that offers the whole list of organisations. No parameters are defined in this call that will display the following information:\n",
        "\n",
        "|Field           |Description                                                        |Type   |Required|\n",
        "|----------------|-------------------------------------------------------------------|-------|--------|\n",
        "|**id**          |Corresponds to the identifier of the organisation, must be unique  |string |true    |"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "p1JwiW6TAgve",
        "colab_type": "code",
        "outputId": "8bdca5df-1a75-4e41-c1f8-aa2e335717e1",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 250
        }
      },
      "source": [
        "import requests\n",
        "import pandas as pd\n",
        "pd.set_option('display.max_rows', 500)\n",
        "pd.set_option('display.max_colwidth', 500)\n",
        "\n",
        "def RetrieveField(json,field):\n",
        "  value=''\n",
        "  try: \n",
        "    value = json[field]\n",
        "  except:\n",
        "    value=''\n",
        "  return value\n",
        "\n",
        "resp = requests.get('https://tbfy.librairy.linkeddata.es/kg-api/organisation')\n",
        "\n",
        "if resp.status_code != 200:\n",
        "    # This means something went wrong.\n",
        "    raise ApiError('GET /tasks/ {}'.format(resp.status_code))\n",
        "\n",
        "organisation = [todo_item['id'] for todo_item in resp.json()]\n",
        "repo_dict = {'Organisation': organisation}    \n",
        "repo_df = pd.DataFrame(repo_dict)\n",
        "\n",
        "with pd.option_context('display.max_rows', None, 'display.max_columns', None, 'display.colheader_justify','light', 'display.width', 2000, 'display.max_colwidth', 500):\n",
        "    repo_df = repo_df.stack().str.lstrip().unstack()\n",
        "    repo_df = repo_df.style.set_properties(**{'text-align': 'left'})\n",
        "repo_df"
      ],
      "execution_count": 26,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<style  type=\"text/css\" >\n",
              "    #T_a4d63b0a_fa31_11e9_880f_0242ac1c0002row0_col0 {\n",
              "            text-align:  left;\n",
              "        }    #T_a4d63b0a_fa31_11e9_880f_0242ac1c0002row1_col0 {\n",
              "            text-align:  left;\n",
              "        }    #T_a4d63b0a_fa31_11e9_880f_0242ac1c0002row2_col0 {\n",
              "            text-align:  left;\n",
              "        }    #T_a4d63b0a_fa31_11e9_880f_0242ac1c0002row3_col0 {\n",
              "            text-align:  left;\n",
              "        }    #T_a4d63b0a_fa31_11e9_880f_0242ac1c0002row4_col0 {\n",
              "            text-align:  left;\n",
              "        }    #T_a4d63b0a_fa31_11e9_880f_0242ac1c0002row5_col0 {\n",
              "            text-align:  left;\n",
              "        }    #T_a4d63b0a_fa31_11e9_880f_0242ac1c0002row6_col0 {\n",
              "            text-align:  left;\n",
              "        }    #T_a4d63b0a_fa31_11e9_880f_0242ac1c0002row7_col0 {\n",
              "            text-align:  left;\n",
              "        }    #T_a4d63b0a_fa31_11e9_880f_0242ac1c0002row8_col0 {\n",
              "            text-align:  left;\n",
              "        }    #T_a4d63b0a_fa31_11e9_880f_0242ac1c0002row9_col0 {\n",
              "            text-align:  left;\n",
              "        }</style><table id=\"T_a4d63b0a_fa31_11e9_880f_0242ac1c0002\" ><thead>    <tr>        <th class=\"blank level0\" ></th>        <th class=\"col_heading level0 col0\" >Organisation</th>    </tr></thead><tbody>\n",
              "                <tr>\n",
              "                        <th id=\"T_a4d63b0a_fa31_11e9_880f_0242ac1c0002level0_row0\" class=\"row_heading level0 row0\" >0</th>\n",
              "                        <td id=\"T_a4d63b0a_fa31_11e9_880f_0242ac1c0002row0_col0\" class=\"data row0 col0\" >ocds-0c46vo-0001-0026c65f-4e5c-4217-895c-04ded2f91f0b_Buyer</td>\n",
              "            </tr>\n",
              "            <tr>\n",
              "                        <th id=\"T_a4d63b0a_fa31_11e9_880f_0242ac1c0002level0_row1\" class=\"row_heading level0 row1\" >1</th>\n",
              "                        <td id=\"T_a4d63b0a_fa31_11e9_880f_0242ac1c0002row1_col0\" class=\"data row1 col0\" >ocds-0c46vo-0001-02aa05f0-5b94-40dc-b7b3-df15a22f56da_Buyer</td>\n",
              "            </tr>\n",
              "            <tr>\n",
              "                        <th id=\"T_a4d63b0a_fa31_11e9_880f_0242ac1c0002level0_row2\" class=\"row_heading level0 row2\" >2</th>\n",
              "                        <td id=\"T_a4d63b0a_fa31_11e9_880f_0242ac1c0002row2_col0\" class=\"data row2 col0\" >ocds-0c46vo-0001-02aa05f0-5b94-40dc-b7b3-df15a22f56da_Award_86c0d4ed-9ad2-4026-9649-442a46ab44ff_Supplier_Sheffield%20Hallam%20University</td>\n",
              "            </tr>\n",
              "            <tr>\n",
              "                        <th id=\"T_a4d63b0a_fa31_11e9_880f_0242ac1c0002level0_row3\" class=\"row_heading level0 row3\" >3</th>\n",
              "                        <td id=\"T_a4d63b0a_fa31_11e9_880f_0242ac1c0002row3_col0\" class=\"data row3 col0\" >ocds-0c46vo-0001-10ed102d-56f2-4fc5-9c83-d6ec67b38365_Buyer</td>\n",
              "            </tr>\n",
              "            <tr>\n",
              "                        <th id=\"T_a4d63b0a_fa31_11e9_880f_0242ac1c0002level0_row4\" class=\"row_heading level0 row4\" >4</th>\n",
              "                        <td id=\"T_a4d63b0a_fa31_11e9_880f_0242ac1c0002row4_col0\" class=\"data row4 col0\" >ocds-0c46vo-0001-12b67c7c-8959-468f-859b-42c963592012_Buyer</td>\n",
              "            </tr>\n",
              "            <tr>\n",
              "                        <th id=\"T_a4d63b0a_fa31_11e9_880f_0242ac1c0002level0_row5\" class=\"row_heading level0 row5\" >5</th>\n",
              "                        <td id=\"T_a4d63b0a_fa31_11e9_880f_0242ac1c0002row5_col0\" class=\"data row5 col0\" >ocds-0c46vo-0001-139edee9-f67c-4c34-a5a9-c7c57134c56b_Buyer</td>\n",
              "            </tr>\n",
              "            <tr>\n",
              "                        <th id=\"T_a4d63b0a_fa31_11e9_880f_0242ac1c0002level0_row6\" class=\"row_heading level0 row6\" >6</th>\n",
              "                        <td id=\"T_a4d63b0a_fa31_11e9_880f_0242ac1c0002row6_col0\" class=\"data row6 col0\" >ocds-0c46vo-0001-139edee9-f67c-4c34-a5a9-c7c57134c56b_Award_6fd3a15e-77b1-405d-8213-a52f30b0fe89_Supplier_METCALFE%20PLANT%20HIRE%20LTD</td>\n",
              "            </tr>\n",
              "            <tr>\n",
              "                        <th id=\"T_a4d63b0a_fa31_11e9_880f_0242ac1c0002level0_row7\" class=\"row_heading level0 row7\" >7</th>\n",
              "                        <td id=\"T_a4d63b0a_fa31_11e9_880f_0242ac1c0002row7_col0\" class=\"data row7 col0\" >ocds-0c46vo-0001-19b489e6-936b-4ae5-b7d7-1cbf4beefe28_Buyer</td>\n",
              "            </tr>\n",
              "            <tr>\n",
              "                        <th id=\"T_a4d63b0a_fa31_11e9_880f_0242ac1c0002level0_row8\" class=\"row_heading level0 row8\" >8</th>\n",
              "                        <td id=\"T_a4d63b0a_fa31_11e9_880f_0242ac1c0002row8_col0\" class=\"data row8 col0\" >ocds-0c46vo-0001-19b489e6-936b-4ae5-b7d7-1cbf4beefe28_Award_fa34cc4e-f5cc-4f7a-8437-e5e90cfc51ea_Supplier_MicroStrategy%20Limited</td>\n",
              "            </tr>\n",
              "            <tr>\n",
              "                        <th id=\"T_a4d63b0a_fa31_11e9_880f_0242ac1c0002level0_row9\" class=\"row_heading level0 row9\" >9</th>\n",
              "                        <td id=\"T_a4d63b0a_fa31_11e9_880f_0242ac1c0002row9_col0\" class=\"data row9 col0\" >ocds-0c46vo-0001-1b5a0ea1-781f-4cea-b589-7403d12ead96_Buyer</td>\n",
              "            </tr>\n",
              "    </tbody></table>"
            ],
            "text/plain": [
              "<pandas.io.formats.style.Styler at 0x7f0a98bc5748>"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 26
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "_3-rW92GD4Yq",
        "colab_type": "text"
      },
      "source": [
        "In the next step, we will obtain the list of contracting processes which the chosen organisation participates in. To do this, we will use the resource of the **core API**:\n",
        "\n",
        "* **GET /organisation/{id}/contracting-process/** that offers the whole list of contracting processes which an organisation participates in. This resource will display the following information:\n",
        "\n",
        "|Field           |Description                                                        |Type   |Required|\n",
        "|----------------|-------------------------------------------------------------------|-------|--------|\n",
        "|**id**          |Corresponds to the identifier of the contracting-process,          |string |true    |\n",
        "|                |must be unique                                                     |       |        |"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "t90z2_4FENA_",
        "colab_type": "code",
        "outputId": "628ac7d2-4f03-440a-95c2-b8e32c9f95af",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 61
        }
      },
      "source": [
        "org1 = 'ocds-0c46vo-0001-0026c65f-4e5c-4217-895c-04ded2f91f0b_Buyer'\n",
        "resp = requests.get('https://tbfy.librairy.linkeddata.es/kg-api/organisation/' + org1 + '/contracting-process')\n",
        "\n",
        "if resp.status_code != 200:\n",
        "    # This means something went wrong.\n",
        "    raise ApiError('GET /tasks/ {}'.format(resp.status_code))\n",
        "    \n",
        "cp = [todo_item['id'] for todo_item in resp.json()]\n",
        "repo_dict = {'Contracting Process': cp}    \n",
        "repo_df = pd.DataFrame(repo_dict, index=[''])\n",
        "\n",
        "with pd.option_context('display.max_rows', None, 'display.max_columns', None, 'display.colheader_justify','light', 'display.width', 2000, 'display.max_colwidth', 500):\n",
        "    repo_df = repo_df.stack().str.lstrip().unstack()\n",
        "    repo_df = repo_df.style.set_properties(**{'text-align': 'left'})\n",
        "repo_df"
      ],
      "execution_count": 27,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<style  type=\"text/css\" >\n",
              "    #T_b7c47e7a_fa31_11e9_880f_0242ac1c0002row0_col0 {\n",
              "            text-align:  left;\n",
              "        }</style><table id=\"T_b7c47e7a_fa31_11e9_880f_0242ac1c0002\" ><thead>    <tr>        <th class=\"blank level0\" ></th>        <th class=\"col_heading level0 col0\" >Contracting Process</th>    </tr></thead><tbody>\n",
              "                <tr>\n",
              "                        <th id=\"T_b7c47e7a_fa31_11e9_880f_0242ac1c0002level0_row0\" class=\"row_heading level0 row0\" ></th>\n",
              "                        <td id=\"T_b7c47e7a_fa31_11e9_880f_0242ac1c0002row0_col0\" class=\"data row0 col0\" >ocds-0c46vo-0001-0026c65f-4e5c-4217-895c-04ded2f91f0b_ContractingProcess</td>\n",
              "            </tr>\n",
              "    </tbody></table>"
            ],
            "text/plain": [
              "<pandas.io.formats.style.Styler at 0x7f0a98c6fba8>"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 27
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "dzGNGH1fEn_z",
        "colab_type": "text"
      },
      "source": [
        "Then, the tenders involved in these contracting processes will be obtained. To do this, we will use the resource of the **core API**:\n",
        "\n",
        "* **GET /contracting-process/{id}/tender/** that offers the whole list of contracting processes which an organisation participates in. This resource will display the following information:\n",
        "\n",
        "|Field           |Description                                                        |Type   |Required|\n",
        "|----------------|-------------------------------------------------------------------|-------|--------|\n",
        "|**id**          |Corresponds to the identifier of the tender             ,          |string |true    |\n",
        "|                |must be unique                                                     |       |        |\n"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "B2f9Ej5HEvYC",
        "colab_type": "code",
        "outputId": "36503a89-e30a-4ff3-83d3-7012842d5dad",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 61
        }
      },
      "source": [
        "cp1 = 'ocds-0c46vo-0001-0026c65f-4e5c-4217-895c-04ded2f91f0b_ContractingProcess'\n",
        "resp = requests.get('https://tbfy.librairy.linkeddata.es/kg-api/contracting-process/' + cp1 + '/tender')\n",
        "\n",
        "if resp.status_code != 200:\n",
        "    # This means something went wrong.\n",
        "    raise ApiError('GET /tasks/ {}'.format(resp.status_code))\n",
        "\n",
        "tender = [todo_item['id'] for todo_item in resp.json()]\n",
        "repo_dict = {'Tender': tender}    \n",
        "repo_df = pd.DataFrame(repo_dict, index=[''])\n",
        "\n",
        "with pd.option_context('display.max_rows', None, 'display.max_columns', None, 'display.colheader_justify','light', 'display.width', 2000, 'display.max_colwidth', 500):\n",
        "    repo_df = repo_df.stack().str.lstrip().unstack()\n",
        "    repo_df = repo_df.style.set_properties(**{'text-align': 'left'})\n",
        "repo_df"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<style  type=\"text/css\" >\n",
              "    #T_7745c7a2_fa1b_11e9_880f_0242ac1c0002row0_col0 {\n",
              "            text-align:  left;\n",
              "        }</style><table id=\"T_7745c7a2_fa1b_11e9_880f_0242ac1c0002\" ><thead>    <tr>        <th class=\"blank level0\" ></th>        <th class=\"col_heading level0 col0\" >Tender</th>    </tr></thead><tbody>\n",
              "                <tr>\n",
              "                        <th id=\"T_7745c7a2_fa1b_11e9_880f_0242ac1c0002level0_row0\" class=\"row_heading level0 row0\" ></th>\n",
              "                        <td id=\"T_7745c7a2_fa1b_11e9_880f_0242ac1c0002row0_col0\" class=\"data row0 col0\" >ocds-0c46vo-0001-0026c65f-4e5c-4217-895c-04ded2f91f0b_Tender_ocds-b5fd17-d293530a-79ff-4c45-96eb-eeeae21395e5-gbc---024167</td>\n",
              "            </tr>\n",
              "    </tbody></table>"
            ],
            "text/plain": [
              "<pandas.io.formats.style.Styler at 0x7f0a99f366d8>"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 3
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "YbCfbdKQK5-z",
        "colab_type": "text"
      },
      "source": [
        "Now, using the **search API**, a list of similar tender descriptions to the one obtained in the **core API** will be obtained:"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "qr0nuZr_J9vN",
        "colab_type": "code",
        "outputId": "b9fda78b-b81b-44e7-a809-97ab37a3de37",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 250
        }
      },
      "source": [
        "td1 = 'ocds-0c46vo-0001-0026c65f-4e5c-4217-895c-04ded2f91f0b_Tender_ocds-b5fd17-d293530a-79ff-4c45-96eb-eeeae21395e5-gbc---024167'\n",
        "resp = requests.get('https://tbfy.librairy.linkeddata.es/search-api/documents/' + td1 + '/items?size=10&source=tender', auth=('oeg', 'oeg2018'))\n",
        "\n",
        "if resp.status_code != 200:\n",
        "    # This means something went wrong.\n",
        "    raise ApiError('GET /tasks/ {}'.format(resp.status_code))\n",
        "#for todo_item in resp.json():\n",
        "#    print('{} '.format(todo_item['id']))\n",
        "    \n",
        "tender = [todo_item['id'] for todo_item in resp.json()]\n",
        "score = [todo_item['score'] for todo_item in resp.json()]\n",
        "repo_dict = {'Tender': tender, 'Score': score}    \n",
        "repo_df = pd.DataFrame(repo_dict)\n",
        "\n",
        "with pd.option_context('display.max_rows', None, 'display.max_columns', None, 'display.colheader_justify','light', 'display.width', 2000, 'display.max_colwidth', 500):\n",
        "    repo_df = repo_df.stack().unstack()\n",
        "    repo_df = repo_df.style.set_properties(**{'text-align': 'left'})\n",
        "repo_df "
      ],
      "execution_count": 28,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<style  type=\"text/css\" >\n",
              "    #T_cf16b502_fa31_11e9_880f_0242ac1c0002row0_col0 {\n",
              "            text-align:  left;\n",
              "        }    #T_cf16b502_fa31_11e9_880f_0242ac1c0002row0_col1 {\n",
              "            text-align:  left;\n",
              "        }    #T_cf16b502_fa31_11e9_880f_0242ac1c0002row1_col0 {\n",
              "            text-align:  left;\n",
              "        }    #T_cf16b502_fa31_11e9_880f_0242ac1c0002row1_col1 {\n",
              "            text-align:  left;\n",
              "        }    #T_cf16b502_fa31_11e9_880f_0242ac1c0002row2_col0 {\n",
              "            text-align:  left;\n",
              "        }    #T_cf16b502_fa31_11e9_880f_0242ac1c0002row2_col1 {\n",
              "            text-align:  left;\n",
              "        }    #T_cf16b502_fa31_11e9_880f_0242ac1c0002row3_col0 {\n",
              "            text-align:  left;\n",
              "        }    #T_cf16b502_fa31_11e9_880f_0242ac1c0002row3_col1 {\n",
              "            text-align:  left;\n",
              "        }    #T_cf16b502_fa31_11e9_880f_0242ac1c0002row4_col0 {\n",
              "            text-align:  left;\n",
              "        }    #T_cf16b502_fa31_11e9_880f_0242ac1c0002row4_col1 {\n",
              "            text-align:  left;\n",
              "        }    #T_cf16b502_fa31_11e9_880f_0242ac1c0002row5_col0 {\n",
              "            text-align:  left;\n",
              "        }    #T_cf16b502_fa31_11e9_880f_0242ac1c0002row5_col1 {\n",
              "            text-align:  left;\n",
              "        }    #T_cf16b502_fa31_11e9_880f_0242ac1c0002row6_col0 {\n",
              "            text-align:  left;\n",
              "        }    #T_cf16b502_fa31_11e9_880f_0242ac1c0002row6_col1 {\n",
              "            text-align:  left;\n",
              "        }    #T_cf16b502_fa31_11e9_880f_0242ac1c0002row7_col0 {\n",
              "            text-align:  left;\n",
              "        }    #T_cf16b502_fa31_11e9_880f_0242ac1c0002row7_col1 {\n",
              "            text-align:  left;\n",
              "        }    #T_cf16b502_fa31_11e9_880f_0242ac1c0002row8_col0 {\n",
              "            text-align:  left;\n",
              "        }    #T_cf16b502_fa31_11e9_880f_0242ac1c0002row8_col1 {\n",
              "            text-align:  left;\n",
              "        }    #T_cf16b502_fa31_11e9_880f_0242ac1c0002row9_col0 {\n",
              "            text-align:  left;\n",
              "        }    #T_cf16b502_fa31_11e9_880f_0242ac1c0002row9_col1 {\n",
              "            text-align:  left;\n",
              "        }</style><table id=\"T_cf16b502_fa31_11e9_880f_0242ac1c0002\" ><thead>    <tr>        <th class=\"blank level0\" ></th>        <th class=\"col_heading level0 col0\" >Tender</th>        <th class=\"col_heading level0 col1\" >Score</th>    </tr></thead><tbody>\n",
              "                <tr>\n",
              "                        <th id=\"T_cf16b502_fa31_11e9_880f_0242ac1c0002level0_row0\" class=\"row_heading level0 row0\" >0</th>\n",
              "                        <td id=\"T_cf16b502_fa31_11e9_880f_0242ac1c0002row0_col0\" class=\"data row0 col0\" >ocds-0c46vo-0022-JAN280073_Tender_JAN280073</td>\n",
              "                        <td id=\"T_cf16b502_fa31_11e9_880f_0242ac1c0002row0_col1\" class=\"data row0 col1\" >3323.26</td>\n",
              "            </tr>\n",
              "            <tr>\n",
              "                        <th id=\"T_cf16b502_fa31_11e9_880f_0242ac1c0002level0_row1\" class=\"row_heading level0 row1\" >1</th>\n",
              "                        <td id=\"T_cf16b502_fa31_11e9_880f_0242ac1c0002row1_col0\" class=\"data row1 col0\" >ocds-0c46vo-0020-sesharedservices_24167_Tender_sesharedservices_24167</td>\n",
              "                        <td id=\"T_cf16b502_fa31_11e9_880f_0242ac1c0002row1_col1\" class=\"data row1 col1\" >3323.26</td>\n",
              "            </tr>\n",
              "            <tr>\n",
              "                        <th id=\"T_cf16b502_fa31_11e9_880f_0242ac1c0002level0_row2\" class=\"row_heading level0 row2\" >2</th>\n",
              "                        <td id=\"T_cf16b502_fa31_11e9_880f_0242ac1c0002row2_col0\" class=\"data row2 col0\" >ocds-0c46vo-0133-009457-2019_Tender_009457-2019_td</td>\n",
              "                        <td id=\"T_cf16b502_fa31_11e9_880f_0242ac1c0002row2_col1\" class=\"data row2 col1\" >3323.26</td>\n",
              "            </tr>\n",
              "            <tr>\n",
              "                        <th id=\"T_cf16b502_fa31_11e9_880f_0242ac1c0002level0_row3\" class=\"row_heading level0 row3\" >3</th>\n",
              "                        <td id=\"T_cf16b502_fa31_11e9_880f_0242ac1c0002row3_col0\" class=\"data row3 col0\" >ocds-0c46vo-0133-035740-2019_Tender_035740-2019_td</td>\n",
              "                        <td id=\"T_cf16b502_fa31_11e9_880f_0242ac1c0002row3_col1\" class=\"data row3 col1\" >3263.89</td>\n",
              "            </tr>\n",
              "            <tr>\n",
              "                        <th id=\"T_cf16b502_fa31_11e9_880f_0242ac1c0002level0_row4\" class=\"row_heading level0 row4\" >4</th>\n",
              "                        <td id=\"T_cf16b502_fa31_11e9_880f_0242ac1c0002row4_col0\" class=\"data row4 col0\" >ocds-0c46vo-0001-478fd0f1-0653-4b0c-8b61-e493998d568b_Tender_ocds-b5fd17-649e1744-cdf6-4b31-857d-449b6f2c7546-epsewl001-dn399971-32701228</td>\n",
              "                        <td id=\"T_cf16b502_fa31_11e9_880f_0242ac1c0002row4_col1\" class=\"data row4 col1\" >3261.43</td>\n",
              "            </tr>\n",
              "            <tr>\n",
              "                        <th id=\"T_cf16b502_fa31_11e9_880f_0242ac1c0002level0_row5\" class=\"row_heading level0 row5\" >5</th>\n",
              "                        <td id=\"T_cf16b502_fa31_11e9_880f_0242ac1c0002row5_col0\" class=\"data row5 col0\" >ocds-0c46vo-0001-4c28c12a-541a-4892-a175-4789e9563cc1_Tender_ocds-b5fd17-d49f15b1-cffb-4e00-8a1a-dcdf7f770ee3-nun---6885---award</td>\n",
              "                        <td id=\"T_cf16b502_fa31_11e9_880f_0242ac1c0002row5_col1\" class=\"data row5 col1\" >3261.43</td>\n",
              "            </tr>\n",
              "            <tr>\n",
              "                        <th id=\"T_cf16b502_fa31_11e9_880f_0242ac1c0002level0_row6\" class=\"row_heading level0 row6\" >6</th>\n",
              "                        <td id=\"T_cf16b502_fa31_11e9_880f_0242ac1c0002row6_col0\" class=\"data row6 col0\" >ocds-0c46vo-0001-612f8b62-1b34-4fc7-b83a-11cc36e2efbf_Tender_ocds-b5fd17-b6398162-25a5-4ba1-b25a-9cd0c64e80ec-gbc2F000000029</td>\n",
              "                        <td id=\"T_cf16b502_fa31_11e9_880f_0242ac1c0002row6_col1\" class=\"data row6 col1\" >3261.43</td>\n",
              "            </tr>\n",
              "            <tr>\n",
              "                        <th id=\"T_cf16b502_fa31_11e9_880f_0242ac1c0002level0_row7\" class=\"row_heading level0 row7\" >7</th>\n",
              "                        <td id=\"T_cf16b502_fa31_11e9_880f_0242ac1c0002row7_col0\" class=\"data row7 col0\" >ocds-0c46vo-0001-71662164-fa45-498b-aa39-7a189add40fa_Tender_ocds-b5fd17-08e7437b-85aa-4db9-afc9-f4d214a7d1a6-traf001-dn356978-85649754</td>\n",
              "                        <td id=\"T_cf16b502_fa31_11e9_880f_0242ac1c0002row7_col1\" class=\"data row7 col1\" >3261.43</td>\n",
              "            </tr>\n",
              "            <tr>\n",
              "                        <th id=\"T_cf16b502_fa31_11e9_880f_0242ac1c0002level0_row8\" class=\"row_heading level0 row8\" >8</th>\n",
              "                        <td id=\"T_cf16b502_fa31_11e9_880f_0242ac1c0002row8_col0\" class=\"data row8 col0\" >ocds-0c46vo-0022-JAN280375_Tender_JAN280375</td>\n",
              "                        <td id=\"T_cf16b502_fa31_11e9_880f_0242ac1c0002row8_col1\" class=\"data row8 col1\" >3261.43</td>\n",
              "            </tr>\n",
              "            <tr>\n",
              "                        <th id=\"T_cf16b502_fa31_11e9_880f_0242ac1c0002level0_row9\" class=\"row_heading level0 row9\" >9</th>\n",
              "                        <td id=\"T_cf16b502_fa31_11e9_880f_0242ac1c0002row9_col0\" class=\"data row9 col0\" >ocds-0c46vo-0022-JAN281967_Tender_JAN281967</td>\n",
              "                        <td id=\"T_cf16b502_fa31_11e9_880f_0242ac1c0002row9_col1\" class=\"data row9 col1\" >3261.43</td>\n",
              "            </tr>\n",
              "    </tbody></table>"
            ],
            "text/plain": [
              "<pandas.io.formats.style.Styler at 0x7f0a98b165c0>"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 28
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "72Nsi2gpSHbb",
        "colab_type": "text"
      },
      "source": [
        "Once we have a list of similar tenders, we begin the way back to find out the participating organisations so, using **core API**, the list of contracting processes associated with that tender we will obtained using the resource:\n",
        "\n",
        "* **GET /tender/{id}/contracting-process/** that offers the whole list of contracting processes related to a tender. This resource will display the following information:\n",
        "\n",
        "|Field           |Description                                                        |Type   |Required|\n",
        "|----------------|-------------------------------------------------------------------|-------|--------|\n",
        "|**id**          |Corresponds to the identifier of the contracting-process,          |string |true    |\n",
        "|                |must be unique                                                     |       |        |"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "1FWHZ8XASjsS",
        "colab_type": "code",
        "outputId": "ab4a9677-9fc3-4a8d-b25c-d1f383f340c3",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 61
        }
      },
      "source": [
        "td2 = 'ocds-0c46vo-0022-JAN280073_Tender_JAN280073'\n",
        "resp = requests.get('https://tbfy.librairy.linkeddata.es/kg-api/tender/' + td2 + '/contracting-process')\n",
        "\n",
        "if resp.status_code != 200:\n",
        "    # This means something went wrong.\n",
        "    raise ApiError('GET /tasks/ {}'.format(resp.status_code))\n",
        "\n",
        "cp = [todo_item['id'] for todo_item in resp.json()]\n",
        "repo_dict = {'Contracting Process': cp}    \n",
        "repo_df = pd.DataFrame(repo_dict, index=[''])\n",
        "\n",
        "with pd.option_context('display.max_rows', None, 'display.max_columns', None, 'display.colheader_justify','light', 'display.width', 2000, 'display.max_colwidth', 500):\n",
        "    repo_df = repo_df.stack().str.lstrip().unstack()\n",
        "    repo_df = repo_df.style.set_properties(**{'text-align': 'left'})\n",
        "repo_df"
      ],
      "execution_count": 29,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<style  type=\"text/css\" >\n",
              "    #T_d9f99318_fa31_11e9_880f_0242ac1c0002row0_col0 {\n",
              "            text-align:  left;\n",
              "        }</style><table id=\"T_d9f99318_fa31_11e9_880f_0242ac1c0002\" ><thead>    <tr>        <th class=\"blank level0\" ></th>        <th class=\"col_heading level0 col0\" >Contracting Process</th>    </tr></thead><tbody>\n",
              "                <tr>\n",
              "                        <th id=\"T_d9f99318_fa31_11e9_880f_0242ac1c0002level0_row0\" class=\"row_heading level0 row0\" ></th>\n",
              "                        <td id=\"T_d9f99318_fa31_11e9_880f_0242ac1c0002row0_col0\" class=\"data row0 col0\" >ocds-0c46vo-0022-JAN280073_ContractingProcess</td>\n",
              "            </tr>\n",
              "    </tbody></table>"
            ],
            "text/plain": [
              "<pandas.io.formats.style.Styler at 0x7f0a98bd8c18>"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 29
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "P4Rx-QDTSyeC",
        "colab_type": "text"
      },
      "source": [
        "Knowing the contracting processes, we can find out the organisations related to the contracting process using the resource:\n",
        "\n",
        "* **GET /contracting-process/{id}/organisation/** that offers the whole list of organisations related to a contracting process. This resource will display the following information:\n",
        "\n",
        "|Field           |Description                                                        |Type   |Required|\n",
        "|----------------|-------------------------------------------------------------------|-------|--------|\n",
        "|**id**          |Corresponds to the identifier of the organisation,                 |string |true    |\n",
        "|                |must be unique                                                     |       |        |"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "yhEfltgES3gE",
        "colab_type": "code",
        "outputId": "d3f2b127-b520-4c8a-cbf2-256932df3c4e",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 61
        }
      },
      "source": [
        "cp2 = 'ocds-0c46vo-0022-JAN280073_ContractingProcess'\n",
        "resp = requests.get('https://tbfy.librairy.linkeddata.es/kg-api/contracting-process/' + cp2 + '/organisation')\n",
        "\n",
        "if resp.status_code != 200:\n",
        "    # This means something went wrong.\n",
        "    raise ApiError('GET /tasks/ {}'.format(resp.status_code))\n",
        "\n",
        "organisation = [todo_item['id'] for todo_item in resp.json()]\n",
        "repo_dict = {'Organisation': organisation}    \n",
        "repo_df = pd.DataFrame(repo_dict)\n",
        "\n",
        "with pd.option_context('display.max_rows', None, 'display.max_columns', None, 'display.colheader_justify','light', 'display.width', 2000, 'display.max_colwidth', 500):\n",
        "    repo_df = repo_df.stack().str.lstrip().unstack()\n",
        "    repo_df = repo_df.style.set_properties(**{'text-align': 'left'})\n",
        "repo_df"
      ],
      "execution_count": 30,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<style  type=\"text/css\" >\n",
              "    #T_e1f41c32_fa31_11e9_880f_0242ac1c0002row0_col0 {\n",
              "            text-align:  left;\n",
              "        }</style><table id=\"T_e1f41c32_fa31_11e9_880f_0242ac1c0002\" ><thead>    <tr>        <th class=\"blank level0\" ></th>        <th class=\"col_heading level0 col0\" >Organisation</th>    </tr></thead><tbody>\n",
              "                <tr>\n",
              "                        <th id=\"T_e1f41c32_fa31_11e9_880f_0242ac1c0002level0_row0\" class=\"row_heading level0 row0\" >0</th>\n",
              "                        <td id=\"T_e1f41c32_fa31_11e9_880f_0242ac1c0002row0_col0\" class=\"data row0 col0\" >ocds-0c46vo-0022-JAN280073_Buyer</td>\n",
              "            </tr>\n",
              "    </tbody></table>"
            ],
            "text/plain": [
              "<pandas.io.formats.style.Styler at 0x7f0a98ae1748>"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 30
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "C9FlPIQDbIXh",
        "colab_type": "text"
      },
      "source": [
        "The last step is to make a comparision between both organisations. Basic information of organisations and the description of the tenders will be also provided."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "hWJslF4VbPKJ",
        "colab_type": "code",
        "outputId": "428c3f66-c799-4114-8046-63eb125e2bcb",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 403
        }
      },
      "source": [
        "org2 = 'ocds-0c46vo-0022-JAN280073_Buyer'\n",
        "\n",
        "resp1 = requests.get('http://tbfy.librairy.linkeddata.es/kg-api/organisation/' + org1)\n",
        "if resp1.status_code != 200:\n",
        "    # This means something went wrong.\n",
        "    raise ApiError('GET /tasks/ {}'.format(resp1.status_code))\n",
        "\n",
        "resp2 = requests.get('http://tbfy.librairy.linkeddata.es/kg-api/organisation/' + org2)\n",
        "if resp2.status_code != 200:\n",
        "    # This means something went wrong.\n",
        "    raise ApiError('GET /tasks/ {}'.format(resp1.status_code))\n",
        "\n",
        "resp3 = requests.get('http://tbfy.librairy.linkeddata.es/kg-api/tender/' + td1)\n",
        "if resp1.status_code != 200:\n",
        "    # This means something went wrong.\n",
        "    raise ApiError('GET /tasks/ {}'.format(resp1.status_code))\n",
        "\n",
        "resp4 = requests.get('http://tbfy.librairy.linkeddata.es/kg-api/tender/' + td2)\n",
        "if resp2.status_code != 200:\n",
        "    # This means something went wrong.\n",
        "    raise ApiError('GET /tasks/ {}'.format(resp2.status_code))\n",
        "\n",
        "\n",
        "org = {'Organisation 1':[RetrieveField(resp1.json(),'id'), RetrieveField(resp1.json(),'name'), RetrieveField(resp1.json(),'streetAddress'), RetrieveField(resp1.json(),'locality'), RetrieveField(resp1.json(),'postalCode'), RetrieveField(resp1.json(),'country'), RetrieveField(resp1.json(),'contact'), RetrieveField(resp1.json(),'email'), RetrieveField(resp1.json(),'telephone'), RetrieveField(resp3.json(),'description')],\n",
        "       'Comparison':['', '', '', '', '', '', '', '', '', ''],\n",
        "       'Organisation 2':[RetrieveField(resp2.json(),'id'), RetrieveField(resp2.json(),'name'), RetrieveField(resp2.json(),'streetAddress'), RetrieveField(resp2.json(),'locality'), RetrieveField(resp2.json(),'postalCode'), RetrieveField(resp2.json(),'country'), RetrieveField(resp2.json(),'contact'), RetrieveField(resp2.json(),'email'), RetrieveField(resp2.json(),'telephone'), RetrieveField(resp4.json(),'description')]}\n",
        "df = pd.DataFrame(org, index=['Identifier', 'Name', 'Address', 'Locality', 'Postal Code', 'Country', 'Contact', 'Email', 'Telephone', 'Tender Description'])\n",
        "\n",
        "with pd.option_context('display.max_rows', None, 'display.max_columns', None, 'display.colheader_justify','light', 'display.width', -1, 'display.max_colwidth', -1):\n",
        "    df = df.stack().str.lstrip().unstack()\n",
        "    df = df.style.set_properties(**{'text-align': 'justify'})\n",
        "df\n",
        " "
      ],
      "execution_count": 31,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<style  type=\"text/css\" >\n",
              "    #T_e65014c0_fa31_11e9_880f_0242ac1c0002row0_col0 {\n",
              "            text-align:  justify;\n",
              "        }    #T_e65014c0_fa31_11e9_880f_0242ac1c0002row0_col1 {\n",
              "            text-align:  justify;\n",
              "        }    #T_e65014c0_fa31_11e9_880f_0242ac1c0002row0_col2 {\n",
              "            text-align:  justify;\n",
              "        }    #T_e65014c0_fa31_11e9_880f_0242ac1c0002row1_col0 {\n",
              "            text-align:  justify;\n",
              "        }    #T_e65014c0_fa31_11e9_880f_0242ac1c0002row1_col1 {\n",
              "            text-align:  justify;\n",
              "        }    #T_e65014c0_fa31_11e9_880f_0242ac1c0002row1_col2 {\n",
              "            text-align:  justify;\n",
              "        }    #T_e65014c0_fa31_11e9_880f_0242ac1c0002row2_col0 {\n",
              "            text-align:  justify;\n",
              "        }    #T_e65014c0_fa31_11e9_880f_0242ac1c0002row2_col1 {\n",
              "            text-align:  justify;\n",
              "        }    #T_e65014c0_fa31_11e9_880f_0242ac1c0002row2_col2 {\n",
              "            text-align:  justify;\n",
              "        }    #T_e65014c0_fa31_11e9_880f_0242ac1c0002row3_col0 {\n",
              "            text-align:  justify;\n",
              "        }    #T_e65014c0_fa31_11e9_880f_0242ac1c0002row3_col1 {\n",
              "            text-align:  justify;\n",
              "        }    #T_e65014c0_fa31_11e9_880f_0242ac1c0002row3_col2 {\n",
              "            text-align:  justify;\n",
              "        }    #T_e65014c0_fa31_11e9_880f_0242ac1c0002row4_col0 {\n",
              "            text-align:  justify;\n",
              "        }    #T_e65014c0_fa31_11e9_880f_0242ac1c0002row4_col1 {\n",
              "            text-align:  justify;\n",
              "        }    #T_e65014c0_fa31_11e9_880f_0242ac1c0002row4_col2 {\n",
              "            text-align:  justify;\n",
              "        }    #T_e65014c0_fa31_11e9_880f_0242ac1c0002row5_col0 {\n",
              "            text-align:  justify;\n",
              "        }    #T_e65014c0_fa31_11e9_880f_0242ac1c0002row5_col1 {\n",
              "            text-align:  justify;\n",
              "        }    #T_e65014c0_fa31_11e9_880f_0242ac1c0002row5_col2 {\n",
              "            text-align:  justify;\n",
              "        }    #T_e65014c0_fa31_11e9_880f_0242ac1c0002row6_col0 {\n",
              "            text-align:  justify;\n",
              "        }    #T_e65014c0_fa31_11e9_880f_0242ac1c0002row6_col1 {\n",
              "            text-align:  justify;\n",
              "        }    #T_e65014c0_fa31_11e9_880f_0242ac1c0002row6_col2 {\n",
              "            text-align:  justify;\n",
              "        }    #T_e65014c0_fa31_11e9_880f_0242ac1c0002row7_col0 {\n",
              "            text-align:  justify;\n",
              "        }    #T_e65014c0_fa31_11e9_880f_0242ac1c0002row7_col1 {\n",
              "            text-align:  justify;\n",
              "        }    #T_e65014c0_fa31_11e9_880f_0242ac1c0002row7_col2 {\n",
              "            text-align:  justify;\n",
              "        }    #T_e65014c0_fa31_11e9_880f_0242ac1c0002row8_col0 {\n",
              "            text-align:  justify;\n",
              "        }    #T_e65014c0_fa31_11e9_880f_0242ac1c0002row8_col1 {\n",
              "            text-align:  justify;\n",
              "        }    #T_e65014c0_fa31_11e9_880f_0242ac1c0002row8_col2 {\n",
              "            text-align:  justify;\n",
              "        }    #T_e65014c0_fa31_11e9_880f_0242ac1c0002row9_col0 {\n",
              "            text-align:  justify;\n",
              "        }    #T_e65014c0_fa31_11e9_880f_0242ac1c0002row9_col1 {\n",
              "            text-align:  justify;\n",
              "        }    #T_e65014c0_fa31_11e9_880f_0242ac1c0002row9_col2 {\n",
              "            text-align:  justify;\n",
              "        }</style><table id=\"T_e65014c0_fa31_11e9_880f_0242ac1c0002\" ><thead>    <tr>        <th class=\"blank level0\" ></th>        <th class=\"col_heading level0 col0\" >Organisation 1</th>        <th class=\"col_heading level0 col1\" >Comparison</th>        <th class=\"col_heading level0 col2\" >Organisation 2</th>    </tr></thead><tbody>\n",
              "                <tr>\n",
              "                        <th id=\"T_e65014c0_fa31_11e9_880f_0242ac1c0002level0_row0\" class=\"row_heading level0 row0\" >Identifier</th>\n",
              "                        <td id=\"T_e65014c0_fa31_11e9_880f_0242ac1c0002row0_col0\" class=\"data row0 col0\" >ocds-0c46vo-0001-0026c65f-4e5c-4217-895c-04ded2f91f0b_Buyer</td>\n",
              "                        <td id=\"T_e65014c0_fa31_11e9_880f_0242ac1c0002row0_col1\" class=\"data row0 col1\" ></td>\n",
              "                        <td id=\"T_e65014c0_fa31_11e9_880f_0242ac1c0002row0_col2\" class=\"data row0 col2\" >ocds-0c46vo-0022-JAN280073_Buyer</td>\n",
              "            </tr>\n",
              "            <tr>\n",
              "                        <th id=\"T_e65014c0_fa31_11e9_880f_0242ac1c0002level0_row1\" class=\"row_heading level0 row1\" >Name</th>\n",
              "                        <td id=\"T_e65014c0_fa31_11e9_880f_0242ac1c0002row1_col0\" class=\"data row1 col0\" >SE Shared Services</td>\n",
              "                        <td id=\"T_e65014c0_fa31_11e9_880f_0242ac1c0002row1_col1\" class=\"data row1 col1\" ></td>\n",
              "                        <td id=\"T_e65014c0_fa31_11e9_880f_0242ac1c0002row1_col2\" class=\"data row1 col2\" >Guildford Borough Council</td>\n",
              "            </tr>\n",
              "            <tr>\n",
              "                        <th id=\"T_e65014c0_fa31_11e9_880f_0242ac1c0002level0_row2\" class=\"row_heading level0 row2\" >Address</th>\n",
              "                        <td id=\"T_e65014c0_fa31_11e9_880f_0242ac1c0002row2_col0\" class=\"data row2 col0\" >Guildford Surrey</td>\n",
              "                        <td id=\"T_e65014c0_fa31_11e9_880f_0242ac1c0002row2_col1\" class=\"data row2 col1\" ></td>\n",
              "                        <td id=\"T_e65014c0_fa31_11e9_880f_0242ac1c0002row2_col2\" class=\"data row2 col2\" >Millmead House Millmead</td>\n",
              "            </tr>\n",
              "            <tr>\n",
              "                        <th id=\"T_e65014c0_fa31_11e9_880f_0242ac1c0002level0_row3\" class=\"row_heading level0 row3\" >Locality</th>\n",
              "                        <td id=\"T_e65014c0_fa31_11e9_880f_0242ac1c0002row3_col0\" class=\"data row3 col0\" >SurreY</td>\n",
              "                        <td id=\"T_e65014c0_fa31_11e9_880f_0242ac1c0002row3_col1\" class=\"data row3 col1\" ></td>\n",
              "                        <td id=\"T_e65014c0_fa31_11e9_880f_0242ac1c0002row3_col2\" class=\"data row3 col2\" ></td>\n",
              "            </tr>\n",
              "            <tr>\n",
              "                        <th id=\"T_e65014c0_fa31_11e9_880f_0242ac1c0002level0_row4\" class=\"row_heading level0 row4\" >Postal Code</th>\n",
              "                        <td id=\"T_e65014c0_fa31_11e9_880f_0242ac1c0002row4_col0\" class=\"data row4 col0\" >GU2 4BB</td>\n",
              "                        <td id=\"T_e65014c0_fa31_11e9_880f_0242ac1c0002row4_col1\" class=\"data row4 col1\" ></td>\n",
              "                        <td id=\"T_e65014c0_fa31_11e9_880f_0242ac1c0002row4_col2\" class=\"data row4 col2\" >GU2 4BB</td>\n",
              "            </tr>\n",
              "            <tr>\n",
              "                        <th id=\"T_e65014c0_fa31_11e9_880f_0242ac1c0002level0_row5\" class=\"row_heading level0 row5\" >Country</th>\n",
              "                        <td id=\"T_e65014c0_fa31_11e9_880f_0242ac1c0002row5_col0\" class=\"data row5 col0\" >United Kingdom</td>\n",
              "                        <td id=\"T_e65014c0_fa31_11e9_880f_0242ac1c0002row5_col1\" class=\"data row5 col1\" ></td>\n",
              "                        <td id=\"T_e65014c0_fa31_11e9_880f_0242ac1c0002row5_col2\" class=\"data row5 col2\" >United Kingdom</td>\n",
              "            </tr>\n",
              "            <tr>\n",
              "                        <th id=\"T_e65014c0_fa31_11e9_880f_0242ac1c0002level0_row6\" class=\"row_heading level0 row6\" >Contact</th>\n",
              "                        <td id=\"T_e65014c0_fa31_11e9_880f_0242ac1c0002row6_col0\" class=\"data row6 col0\" >Loraine Austin (GBC)</td>\n",
              "                        <td id=\"T_e65014c0_fa31_11e9_880f_0242ac1c0002row6_col1\" class=\"data row6 col1\" ></td>\n",
              "                        <td id=\"T_e65014c0_fa31_11e9_880f_0242ac1c0002row6_col2\" class=\"data row6 col2\" >Loraine Austin</td>\n",
              "            </tr>\n",
              "            <tr>\n",
              "                        <th id=\"T_e65014c0_fa31_11e9_880f_0242ac1c0002level0_row7\" class=\"row_heading level0 row7\" >Email</th>\n",
              "                        <td id=\"T_e65014c0_fa31_11e9_880f_0242ac1c0002row7_col0\" class=\"data row7 col0\" >loraine.austin@guildford.gov.uk</td>\n",
              "                        <td id=\"T_e65014c0_fa31_11e9_880f_0242ac1c0002row7_col1\" class=\"data row7 col1\" ></td>\n",
              "                        <td id=\"T_e65014c0_fa31_11e9_880f_0242ac1c0002row7_col2\" class=\"data row7 col2\" >loraine.austin@guildford.gov.uk</td>\n",
              "            </tr>\n",
              "            <tr>\n",
              "                        <th id=\"T_e65014c0_fa31_11e9_880f_0242ac1c0002level0_row8\" class=\"row_heading level0 row8\" >Telephone</th>\n",
              "                        <td id=\"T_e65014c0_fa31_11e9_880f_0242ac1c0002row8_col0\" class=\"data row8 col0\" >01483 444926</td>\n",
              "                        <td id=\"T_e65014c0_fa31_11e9_880f_0242ac1c0002row8_col1\" class=\"data row8 col1\" ></td>\n",
              "                        <td id=\"T_e65014c0_fa31_11e9_880f_0242ac1c0002row8_col2\" class=\"data row8 col2\" >+44 1483444926</td>\n",
              "            </tr>\n",
              "            <tr>\n",
              "                        <th id=\"T_e65014c0_fa31_11e9_880f_0242ac1c0002level0_row9\" class=\"row_heading level0 row9\" >Tender Description</th>\n",
              "                        <td id=\"T_e65014c0_fa31_11e9_880f_0242ac1c0002row9_col0\" class=\"data row9 col0\" >Guildford Borough Council (herein the Council) is a local housing authority with some 5,300 dwellings comprising houses, low/medium rise flats, various non-residential public buildings and managed land located across the Borough. The requirement of this one stage, open Invitation to Tender is to secure a Contractor for a 3 year term with the option to extend for a further 2 years, with an organisation capable of undertaking a day-to-day rubbish clearance and cleaning service to the properties and managed land.  The overall aim of the Council is to provide high quality homes and sustainable neighbourhoods.</td>\n",
              "                        <td id=\"T_e65014c0_fa31_11e9_880f_0242ac1c0002row9_col1\" class=\"data row9 col1\" ></td>\n",
              "                        <td id=\"T_e65014c0_fa31_11e9_880f_0242ac1c0002row9_col2\" class=\"data row9 col2\" >Guildford Borough Council (herein the Council) is a local housing authority with some 5 300 dwellings comprising houses, low/medium rise flats, various non-residential public buildings and managed land located across the Borough. The requirement of this one stage, open Invitation to Tender is to secure a Contractor for a 3 year term with the option to extend for a further 2 years, with an organisation capable of undertaking a day-to-day rubbish clearance and cleaning service to the properties and managed land. The overall aim of the Council is to provide high quality homes and sustainable neighbourhoods.</td>\n",
              "            </tr>\n",
              "    </tbody></table>"
            ],
            "text/plain": [
              "<pandas.io.formats.style.Styler at 0x7f0a98b16518>"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 31
        }
      ]
    }
  ]
}

